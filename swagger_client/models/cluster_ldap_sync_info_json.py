# coding: utf-8

"""
    SMACS REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.2.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ClusterLdapSyncInfoJson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cluster_id': 'int',
        'cluster_name': 'str',
        'cucm_server': 'ServerLdapSyncInfoJson',
        'unity_servers': 'list[ServerLdapSyncInfoJson]'
    }

    attribute_map = {
        'cluster_id': 'clusterId',
        'cluster_name': 'clusterName',
        'cucm_server': 'cucmServer',
        'unity_servers': 'unityServers'
    }

    def __init__(self, cluster_id=None, cluster_name=None, cucm_server=None, unity_servers=None):  # noqa: E501
        """ClusterLdapSyncInfoJson - a model defined in Swagger"""  # noqa: E501
        self._cluster_id = None
        self._cluster_name = None
        self._cucm_server = None
        self._unity_servers = None
        self.discriminator = None
        if cluster_id is not None:
            self.cluster_id = cluster_id
        if cluster_name is not None:
            self.cluster_name = cluster_name
        if cucm_server is not None:
            self.cucm_server = cucm_server
        if unity_servers is not None:
            self.unity_servers = unity_servers

    @property
    def cluster_id(self):
        """Gets the cluster_id of this ClusterLdapSyncInfoJson.  # noqa: E501


        :return: The cluster_id of this ClusterLdapSyncInfoJson.  # noqa: E501
        :rtype: int
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this ClusterLdapSyncInfoJson.


        :param cluster_id: The cluster_id of this ClusterLdapSyncInfoJson.  # noqa: E501
        :type: int
        """

        self._cluster_id = cluster_id

    @property
    def cluster_name(self):
        """Gets the cluster_name of this ClusterLdapSyncInfoJson.  # noqa: E501


        :return: The cluster_name of this ClusterLdapSyncInfoJson.  # noqa: E501
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this ClusterLdapSyncInfoJson.


        :param cluster_name: The cluster_name of this ClusterLdapSyncInfoJson.  # noqa: E501
        :type: str
        """

        self._cluster_name = cluster_name

    @property
    def cucm_server(self):
        """Gets the cucm_server of this ClusterLdapSyncInfoJson.  # noqa: E501


        :return: The cucm_server of this ClusterLdapSyncInfoJson.  # noqa: E501
        :rtype: ServerLdapSyncInfoJson
        """
        return self._cucm_server

    @cucm_server.setter
    def cucm_server(self, cucm_server):
        """Sets the cucm_server of this ClusterLdapSyncInfoJson.


        :param cucm_server: The cucm_server of this ClusterLdapSyncInfoJson.  # noqa: E501
        :type: ServerLdapSyncInfoJson
        """

        self._cucm_server = cucm_server

    @property
    def unity_servers(self):
        """Gets the unity_servers of this ClusterLdapSyncInfoJson.  # noqa: E501


        :return: The unity_servers of this ClusterLdapSyncInfoJson.  # noqa: E501
        :rtype: list[ServerLdapSyncInfoJson]
        """
        return self._unity_servers

    @unity_servers.setter
    def unity_servers(self, unity_servers):
        """Sets the unity_servers of this ClusterLdapSyncInfoJson.


        :param unity_servers: The unity_servers of this ClusterLdapSyncInfoJson.  # noqa: E501
        :type: list[ServerLdapSyncInfoJson]
        """

        self._unity_servers = unity_servers

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClusterLdapSyncInfoJson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClusterLdapSyncInfoJson):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
