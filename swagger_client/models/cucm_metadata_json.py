# coding: utf-8

"""
    SMACS REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.2.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CucmMetadataJson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'device_pools': 'list[str]',
        'phone_models': 'list[str]',
        'common_device_configurations': 'list[str]',
        'soft_key_templates': 'list[str]',
        'end_user_groups': 'list[str]',
        'common_phone_profiles': 'list[CommonPhoneProfileJson]',
        'calling_search_spaces': 'list[str]',
        'locations': 'list[str]',
        'user_locales': 'list[str]',
        'built_in_bridges': 'list[str]',
        'default_on_off_options': 'list[str]',
        'feature_control_policies': 'list[str]',
        'route_partitions': 'list[str]',
        'call_pickup_groups': 'list[str]',
        'voicemail_profiles': 'list[str]',
        'phone_services': 'dict(str, PhoneServiceJson)',
        'uc_service_profiles': 'list[str]',
        'idle_ring_settings': 'list[str]',
        'active_ring_settings': 'list[str]',
        'call_recording_options': 'list[str]',
        'call_recording_profiles': 'list[str]',
        'sip_profile_names': 'list[str]',
        'line_groups': 'list[str]',
        'music_on_hold_audio_sources': 'list[str]'
    }

    attribute_map = {
        'device_pools': 'devicePools',
        'phone_models': 'phoneModels',
        'common_device_configurations': 'commonDeviceConfigurations',
        'soft_key_templates': 'softKeyTemplates',
        'end_user_groups': 'endUserGroups',
        'common_phone_profiles': 'commonPhoneProfiles',
        'calling_search_spaces': 'callingSearchSpaces',
        'locations': 'locations',
        'user_locales': 'userLocales',
        'built_in_bridges': 'builtInBridges',
        'default_on_off_options': 'defaultOnOffOptions',
        'feature_control_policies': 'featureControlPolicies',
        'route_partitions': 'routePartitions',
        'call_pickup_groups': 'callPickupGroups',
        'voicemail_profiles': 'voicemailProfiles',
        'phone_services': 'phoneServices',
        'uc_service_profiles': 'ucServiceProfiles',
        'idle_ring_settings': 'idleRingSettings',
        'active_ring_settings': 'activeRingSettings',
        'call_recording_options': 'callRecordingOptions',
        'call_recording_profiles': 'callRecordingProfiles',
        'sip_profile_names': 'sipProfileNames',
        'line_groups': 'lineGroups',
        'music_on_hold_audio_sources': 'musicOnHoldAudioSources'
    }

    def __init__(self, device_pools=None, phone_models=None, common_device_configurations=None, soft_key_templates=None, end_user_groups=None, common_phone_profiles=None, calling_search_spaces=None, locations=None, user_locales=None, built_in_bridges=None, default_on_off_options=None, feature_control_policies=None, route_partitions=None, call_pickup_groups=None, voicemail_profiles=None, phone_services=None, uc_service_profiles=None, idle_ring_settings=None, active_ring_settings=None, call_recording_options=None, call_recording_profiles=None, sip_profile_names=None, line_groups=None, music_on_hold_audio_sources=None):  # noqa: E501
        """CucmMetadataJson - a model defined in Swagger"""  # noqa: E501
        self._device_pools = None
        self._phone_models = None
        self._common_device_configurations = None
        self._soft_key_templates = None
        self._end_user_groups = None
        self._common_phone_profiles = None
        self._calling_search_spaces = None
        self._locations = None
        self._user_locales = None
        self._built_in_bridges = None
        self._default_on_off_options = None
        self._feature_control_policies = None
        self._route_partitions = None
        self._call_pickup_groups = None
        self._voicemail_profiles = None
        self._phone_services = None
        self._uc_service_profiles = None
        self._idle_ring_settings = None
        self._active_ring_settings = None
        self._call_recording_options = None
        self._call_recording_profiles = None
        self._sip_profile_names = None
        self._line_groups = None
        self._music_on_hold_audio_sources = None
        self.discriminator = None
        if device_pools is not None:
            self.device_pools = device_pools
        if phone_models is not None:
            self.phone_models = phone_models
        if common_device_configurations is not None:
            self.common_device_configurations = common_device_configurations
        if soft_key_templates is not None:
            self.soft_key_templates = soft_key_templates
        if end_user_groups is not None:
            self.end_user_groups = end_user_groups
        if common_phone_profiles is not None:
            self.common_phone_profiles = common_phone_profiles
        if calling_search_spaces is not None:
            self.calling_search_spaces = calling_search_spaces
        if locations is not None:
            self.locations = locations
        if user_locales is not None:
            self.user_locales = user_locales
        if built_in_bridges is not None:
            self.built_in_bridges = built_in_bridges
        if default_on_off_options is not None:
            self.default_on_off_options = default_on_off_options
        if feature_control_policies is not None:
            self.feature_control_policies = feature_control_policies
        if route_partitions is not None:
            self.route_partitions = route_partitions
        if call_pickup_groups is not None:
            self.call_pickup_groups = call_pickup_groups
        if voicemail_profiles is not None:
            self.voicemail_profiles = voicemail_profiles
        if phone_services is not None:
            self.phone_services = phone_services
        if uc_service_profiles is not None:
            self.uc_service_profiles = uc_service_profiles
        if idle_ring_settings is not None:
            self.idle_ring_settings = idle_ring_settings
        if active_ring_settings is not None:
            self.active_ring_settings = active_ring_settings
        if call_recording_options is not None:
            self.call_recording_options = call_recording_options
        if call_recording_profiles is not None:
            self.call_recording_profiles = call_recording_profiles
        if sip_profile_names is not None:
            self.sip_profile_names = sip_profile_names
        if line_groups is not None:
            self.line_groups = line_groups
        if music_on_hold_audio_sources is not None:
            self.music_on_hold_audio_sources = music_on_hold_audio_sources

    @property
    def device_pools(self):
        """Gets the device_pools of this CucmMetadataJson.  # noqa: E501


        :return: The device_pools of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._device_pools

    @device_pools.setter
    def device_pools(self, device_pools):
        """Sets the device_pools of this CucmMetadataJson.


        :param device_pools: The device_pools of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._device_pools = device_pools

    @property
    def phone_models(self):
        """Gets the phone_models of this CucmMetadataJson.  # noqa: E501


        :return: The phone_models of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._phone_models

    @phone_models.setter
    def phone_models(self, phone_models):
        """Sets the phone_models of this CucmMetadataJson.


        :param phone_models: The phone_models of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._phone_models = phone_models

    @property
    def common_device_configurations(self):
        """Gets the common_device_configurations of this CucmMetadataJson.  # noqa: E501


        :return: The common_device_configurations of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._common_device_configurations

    @common_device_configurations.setter
    def common_device_configurations(self, common_device_configurations):
        """Sets the common_device_configurations of this CucmMetadataJson.


        :param common_device_configurations: The common_device_configurations of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._common_device_configurations = common_device_configurations

    @property
    def soft_key_templates(self):
        """Gets the soft_key_templates of this CucmMetadataJson.  # noqa: E501


        :return: The soft_key_templates of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._soft_key_templates

    @soft_key_templates.setter
    def soft_key_templates(self, soft_key_templates):
        """Sets the soft_key_templates of this CucmMetadataJson.


        :param soft_key_templates: The soft_key_templates of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._soft_key_templates = soft_key_templates

    @property
    def end_user_groups(self):
        """Gets the end_user_groups of this CucmMetadataJson.  # noqa: E501


        :return: The end_user_groups of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._end_user_groups

    @end_user_groups.setter
    def end_user_groups(self, end_user_groups):
        """Sets the end_user_groups of this CucmMetadataJson.


        :param end_user_groups: The end_user_groups of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._end_user_groups = end_user_groups

    @property
    def common_phone_profiles(self):
        """Gets the common_phone_profiles of this CucmMetadataJson.  # noqa: E501


        :return: The common_phone_profiles of this CucmMetadataJson.  # noqa: E501
        :rtype: list[CommonPhoneProfileJson]
        """
        return self._common_phone_profiles

    @common_phone_profiles.setter
    def common_phone_profiles(self, common_phone_profiles):
        """Sets the common_phone_profiles of this CucmMetadataJson.


        :param common_phone_profiles: The common_phone_profiles of this CucmMetadataJson.  # noqa: E501
        :type: list[CommonPhoneProfileJson]
        """

        self._common_phone_profiles = common_phone_profiles

    @property
    def calling_search_spaces(self):
        """Gets the calling_search_spaces of this CucmMetadataJson.  # noqa: E501


        :return: The calling_search_spaces of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._calling_search_spaces

    @calling_search_spaces.setter
    def calling_search_spaces(self, calling_search_spaces):
        """Sets the calling_search_spaces of this CucmMetadataJson.


        :param calling_search_spaces: The calling_search_spaces of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._calling_search_spaces = calling_search_spaces

    @property
    def locations(self):
        """Gets the locations of this CucmMetadataJson.  # noqa: E501


        :return: The locations of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this CucmMetadataJson.


        :param locations: The locations of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._locations = locations

    @property
    def user_locales(self):
        """Gets the user_locales of this CucmMetadataJson.  # noqa: E501


        :return: The user_locales of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._user_locales

    @user_locales.setter
    def user_locales(self, user_locales):
        """Sets the user_locales of this CucmMetadataJson.


        :param user_locales: The user_locales of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._user_locales = user_locales

    @property
    def built_in_bridges(self):
        """Gets the built_in_bridges of this CucmMetadataJson.  # noqa: E501


        :return: The built_in_bridges of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._built_in_bridges

    @built_in_bridges.setter
    def built_in_bridges(self, built_in_bridges):
        """Sets the built_in_bridges of this CucmMetadataJson.


        :param built_in_bridges: The built_in_bridges of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._built_in_bridges = built_in_bridges

    @property
    def default_on_off_options(self):
        """Gets the default_on_off_options of this CucmMetadataJson.  # noqa: E501


        :return: The default_on_off_options of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_on_off_options

    @default_on_off_options.setter
    def default_on_off_options(self, default_on_off_options):
        """Sets the default_on_off_options of this CucmMetadataJson.


        :param default_on_off_options: The default_on_off_options of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._default_on_off_options = default_on_off_options

    @property
    def feature_control_policies(self):
        """Gets the feature_control_policies of this CucmMetadataJson.  # noqa: E501


        :return: The feature_control_policies of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._feature_control_policies

    @feature_control_policies.setter
    def feature_control_policies(self, feature_control_policies):
        """Sets the feature_control_policies of this CucmMetadataJson.


        :param feature_control_policies: The feature_control_policies of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._feature_control_policies = feature_control_policies

    @property
    def route_partitions(self):
        """Gets the route_partitions of this CucmMetadataJson.  # noqa: E501


        :return: The route_partitions of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._route_partitions

    @route_partitions.setter
    def route_partitions(self, route_partitions):
        """Sets the route_partitions of this CucmMetadataJson.


        :param route_partitions: The route_partitions of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._route_partitions = route_partitions

    @property
    def call_pickup_groups(self):
        """Gets the call_pickup_groups of this CucmMetadataJson.  # noqa: E501


        :return: The call_pickup_groups of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._call_pickup_groups

    @call_pickup_groups.setter
    def call_pickup_groups(self, call_pickup_groups):
        """Sets the call_pickup_groups of this CucmMetadataJson.


        :param call_pickup_groups: The call_pickup_groups of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._call_pickup_groups = call_pickup_groups

    @property
    def voicemail_profiles(self):
        """Gets the voicemail_profiles of this CucmMetadataJson.  # noqa: E501


        :return: The voicemail_profiles of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._voicemail_profiles

    @voicemail_profiles.setter
    def voicemail_profiles(self, voicemail_profiles):
        """Sets the voicemail_profiles of this CucmMetadataJson.


        :param voicemail_profiles: The voicemail_profiles of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._voicemail_profiles = voicemail_profiles

    @property
    def phone_services(self):
        """Gets the phone_services of this CucmMetadataJson.  # noqa: E501


        :return: The phone_services of this CucmMetadataJson.  # noqa: E501
        :rtype: dict(str, PhoneServiceJson)
        """
        return self._phone_services

    @phone_services.setter
    def phone_services(self, phone_services):
        """Sets the phone_services of this CucmMetadataJson.


        :param phone_services: The phone_services of this CucmMetadataJson.  # noqa: E501
        :type: dict(str, PhoneServiceJson)
        """

        self._phone_services = phone_services

    @property
    def uc_service_profiles(self):
        """Gets the uc_service_profiles of this CucmMetadataJson.  # noqa: E501


        :return: The uc_service_profiles of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._uc_service_profiles

    @uc_service_profiles.setter
    def uc_service_profiles(self, uc_service_profiles):
        """Sets the uc_service_profiles of this CucmMetadataJson.


        :param uc_service_profiles: The uc_service_profiles of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._uc_service_profiles = uc_service_profiles

    @property
    def idle_ring_settings(self):
        """Gets the idle_ring_settings of this CucmMetadataJson.  # noqa: E501


        :return: The idle_ring_settings of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._idle_ring_settings

    @idle_ring_settings.setter
    def idle_ring_settings(self, idle_ring_settings):
        """Sets the idle_ring_settings of this CucmMetadataJson.


        :param idle_ring_settings: The idle_ring_settings of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._idle_ring_settings = idle_ring_settings

    @property
    def active_ring_settings(self):
        """Gets the active_ring_settings of this CucmMetadataJson.  # noqa: E501


        :return: The active_ring_settings of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._active_ring_settings

    @active_ring_settings.setter
    def active_ring_settings(self, active_ring_settings):
        """Sets the active_ring_settings of this CucmMetadataJson.


        :param active_ring_settings: The active_ring_settings of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._active_ring_settings = active_ring_settings

    @property
    def call_recording_options(self):
        """Gets the call_recording_options of this CucmMetadataJson.  # noqa: E501


        :return: The call_recording_options of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._call_recording_options

    @call_recording_options.setter
    def call_recording_options(self, call_recording_options):
        """Sets the call_recording_options of this CucmMetadataJson.


        :param call_recording_options: The call_recording_options of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._call_recording_options = call_recording_options

    @property
    def call_recording_profiles(self):
        """Gets the call_recording_profiles of this CucmMetadataJson.  # noqa: E501


        :return: The call_recording_profiles of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._call_recording_profiles

    @call_recording_profiles.setter
    def call_recording_profiles(self, call_recording_profiles):
        """Sets the call_recording_profiles of this CucmMetadataJson.


        :param call_recording_profiles: The call_recording_profiles of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._call_recording_profiles = call_recording_profiles

    @property
    def sip_profile_names(self):
        """Gets the sip_profile_names of this CucmMetadataJson.  # noqa: E501


        :return: The sip_profile_names of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._sip_profile_names

    @sip_profile_names.setter
    def sip_profile_names(self, sip_profile_names):
        """Sets the sip_profile_names of this CucmMetadataJson.


        :param sip_profile_names: The sip_profile_names of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._sip_profile_names = sip_profile_names

    @property
    def line_groups(self):
        """Gets the line_groups of this CucmMetadataJson.  # noqa: E501


        :return: The line_groups of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._line_groups

    @line_groups.setter
    def line_groups(self, line_groups):
        """Sets the line_groups of this CucmMetadataJson.


        :param line_groups: The line_groups of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._line_groups = line_groups

    @property
    def music_on_hold_audio_sources(self):
        """Gets the music_on_hold_audio_sources of this CucmMetadataJson.  # noqa: E501


        :return: The music_on_hold_audio_sources of this CucmMetadataJson.  # noqa: E501
        :rtype: list[str]
        """
        return self._music_on_hold_audio_sources

    @music_on_hold_audio_sources.setter
    def music_on_hold_audio_sources(self, music_on_hold_audio_sources):
        """Sets the music_on_hold_audio_sources of this CucmMetadataJson.


        :param music_on_hold_audio_sources: The music_on_hold_audio_sources of this CucmMetadataJson.  # noqa: E501
        :type: list[str]
        """

        self._music_on_hold_audio_sources = music_on_hold_audio_sources

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CucmMetadataJson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CucmMetadataJson):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
